#ifndef __COMMON_H__
#define __COMMON_H__

#include <stdio.h>
#include <assert.h>
#include <stdlib.h>
#include <string.h>
#include <stddef.h>

#endif // __COMMON_H__


//附加题
//1.给定100亿个整数，设计算法找到只出现一次的整数
//2.给两个文件，分别有100亿个整数，我们只有1G内存，如何找到两个文件交集
//3.1个文件有100亿个int，1G内存，设计算法找到出现次数不超过2次的所有整数
//
//1.对于100亿个整数，采用位图的方法，找到只出现一次的数
//这就是400亿个字节，储存在内存中的话就需要40G的内存，这明显不可能所以采用位图的方法。
//对于100亿个整数就只需要大约2 ^ 32 / 8 = 0.5G的内存空间
//可以将其分为两种情况，
//一种是出现一次：
//另外就是出现零次或者多次：
//对于出现一次的对于用hash求得的位置将该位为置为1，其余置为0即可。
//最后就是查找位图中为1的就是只出现一次的数。
//2.有两种方法：
//第一种：就是采用两个位图分别存储，然后再将这两个位图进行按位与
//第二种：将一个文件中的数据储存在位图中，然后再遍历另外一个文件里面的数据，将其放到位图中，看改为是否为1，就可以了
//3.采用位图的方法：
//用两位表示一个数出现的次数，
//00 01 10 11 分别表示出现0次，1次，2次，多于2次
//遍历这100个数，将其放到位图中去，遇到00 01 10分别要进行加1，遇到11的话，就不管继续遍历下一个数字。